# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
# Don't change the below 3 rows order...
export ZSH=/Users/peterlukacs/.oh-my-zsh
ZSH_THEME="af-magic"
source $ZSH/oh-my-zsh.sh

# enable zsh-completions
autoload -U +X compinit && compinit
autoload -U +X bashcompinit && bashcompinit

plugins=(
    zsh-completions autojump
)

# Aliases
alias zshconfig="code ~/.zshrc"
alias hotkeys="code /Users/peterlukacs/.hammerspoon/"
alias command-hints="cat ~/.command-hints.md"
alias restart-shell="zsh -l"
alias dil='docker image ls'
alias dip='docker image prune -f'
alias dp='docker ps'

# Komoot
tunnel() {
    # Find the JSON file with the furthest expiration time, that contains both the expiresAt and the accessToken keys
    local expiration_time=$(find ~/.aws/sso/cache/ -type f -name "*.json" -exec grep -q '"accessToken"' {} \; -exec grep -q '"expiresAt"' {} \; -exec jq -r '.expiresAt' {} + | sort -r | head -n 1)

    echo 'sso login will expire at' $(echo $expiration_time)

    # Authenticate with AWS: run AWS SSO login if no expiration time was found or if the latest one is in the past
    if [ -z "$expiration_time" ] || [ "$(date -j -u -f "%Y-%m-%dT%H:%M:%SZ" "$expiration_time" +%s)" -lt "$(date +%s)" ]; then
        aws sso login --profile komoot-analytics:ops
    fi

  # establish the SSH tunnel
    ~/aws-ssh-tunnel.sh --profile komoot-analytics:ops 5439:main.ci6pf3wvc9tf.eu-west-1.redshift.amazonaws.com:5439
}

# pyenv for python version management
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"

eval "$(pyenv init --path)"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

# autojump
[ -f /opt/homebrew/etc/profile.d/autojump.sh ] && . /opt/homebrew/etc/profile.d/autojump.sh

# disable Chrome's two/three finger 'go back/forward' navigation
defaults write com.google.Chrome AppleEnableSwipeNavigateWithScrolls -bool FALSE

# countdown timer (cdt)
function cdt(){
    local now=$(date +%s)
    local end=$((now + $1))
    while (( now < end)); do
        printf "%s\r" "$(date -u -j -f %s $((end - now)) +%T)"
        sleep 0.25
        now=$(date +%s)
    done
    printf "%s\r" "$(date -u -j -f %s $((end - now)) +%T)"
    echo
    echo -en "\a"
}

# Google cloud SDK (gcloud cli)
source "$(brew --prefix)/share/google-cloud-sdk/path.zsh.inc"
source "$(brew --prefix)/share/google-cloud-sdk/completion.zsh.inc"

### MANAGED BY RANCHER DESKTOP START (DO NOT EDIT)
export PATH="/Users/peterlukacs/.rd/bin:$PATH"
### MANAGED BY RANCHER DESKTOP END (DO NOT EDIT)
